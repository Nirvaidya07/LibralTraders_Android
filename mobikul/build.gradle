if (!is_marketplace_app) {
//    plugins {
//        id 'com.github.triplet.play' version '2.1.0'
//    }
    apply plugin: 'com.android.application'
    apply plugin: 'com.google.firebase.crashlytics'
} else {
    apply plugin: 'com.android.library'
}





apply plugin: 'kotlin-android'

apply plugin: 'kotlin-parcelize'

apply plugin: 'kotlin-kapt'


android {
    compileSdkVersion compile_sdk_version
    signingConfigs {
        release {
            storeFile file('/Users/dudhat/Documents/libral_trade_android-develop/Keystore/Libral_traders_key_store.jks')
            storePassword 'kc!a~RMX+&3F'
            keyAlias 'libral_key'
            keyPassword 'kc!a~RMX+&3F'
        }
    }
    defaultConfig {
        buildConfigField "boolean", "IS_MARKET_PLACE", "$is_marketplace_app"
        vectorDrawables.useSupportLibrary = true

        minSdkVersion min_sdk_version
        targetSdkVersion target_sdk_version

        versionCode version_code
        versionName version_name

        multiDexEnabled true

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        ndk {
            debugSymbolLevel 'SYMBOL_TABLE'
        }
    }
    lintOptions {
        checkReleaseBuilds false
        abortOnError false
    }
    buildTypes {
        debug {
            debuggable true
            minifyEnabled false
            shrinkResources false
            if (!is_marketplace_app) {
                firebaseCrashlytics {
                    // If you don't need crash reporting for your debug build,
                    // you can speed up your build by disabling mapping file uploading.
                    mappingFileUploadEnabled false
                }
            }
        }
        release {
            signingConfig signingConfigs.release
            if (!is_marketplace_app) {
                debuggable false
                minifyEnabled true
                shrinkResources true
                proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            } else {
                minifyEnabled false
                shrinkResources false
                proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            }
        }
    }
    bundle {
        density {
            // Different APKs are generated for devices with different screen densities; true by default.
            enableSplit true
        }
        abi {
            // Different APKs are generated for devices with different CPU architectures; true by default.
            enableSplit true
        }
        language {
            // This is disabled so that the App Bundle does NOT split the APK for each language.
            // We're gonna use the same APK for all languages.
            enableSplit false
        }
    }
    flavorDimensions 'default'

    productFlavors {
        mobikul {
            if (!is_marketplace_app) {
                applicationId "com.libraltraders.android"
                dimension 'default'
            }
        }
            }

    buildFeatures {
        dataBinding = true
        viewBinding = true
    }
    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    packagingOptions {
        exclude 'META-INF/proguard/androidx-annotations.pro'
    }
}

repositories {
    maven { url 'https://jitpack.io' }
}

configurations {
    cleanedAnnotations
    compile.exclude group: 'org.jetbrains', module: 'annotations'
}
dependencies {
    api fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'androidx.navigation:navigation-fragment-ktx:2.5.3'
    implementation 'androidx.navigation:navigation-ui-ktx:2.5.3'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test:runner:1.4.0'

    // For Espresso testing
    androidTestImplementation('androidx.test.espresso:espresso-core:3.1.0', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    androidTestImplementation('androidx.test.espresso:espresso-contrib:3.4.0') {
        exclude group: 'com.android.support', module: 'appcompat-v7'
        exclude group: 'com.android.support', module: 'support-v4'
        exclude module: 'recyclerview-v7'
    }

    api "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    api 'androidx.multidex:multidex:2.0.1'
    api 'androidx.constraintlayout:constraintlayout:2.1.3'
    api "androidx.swiperefreshlayout:swiperefreshlayout:1.1.0"
    api 'androidx.appcompat:appcompat:1.4.1'
    api 'com.google.android.material:material:1.4.0'
    api 'androidx.vectordrawable:vectordrawable:1.1.0'
    api 'androidx.browser:browser:1.4.0'
    api "androidx.webkit:webkit:1.4.0"

    // Lifecycle
    api 'androidx.lifecycle:lifecycle-extensions:2.2.0'

    //jackson parser
    api 'com.squareup.retrofit2:converter-jackson:2.7.2'
    api 'com.fasterxml.jackson.core:jackson-databind:2.10.3'
    api 'com.fasterxml.jackson.core:jackson-core:2.10.3'
    api 'com.fasterxml.jackson.core:jackson-annotations:2.10.3'

    // Retrofit
    api "com.squareup.retrofit2:retrofit:$retrofit2"
    api "com.squareup.retrofit2:adapter-rxjava2:$retrofit2"
    api "com.squareup.okhttp3:logging-interceptor:$okhttp3"
    api "com.squareup.okhttp3:okhttp-urlconnection:$okhttp3"

    // Reactive X android
    api "io.reactivex.rxjava2:rxandroid:2.1.1"
    // Because RxAndroid releases are few and far between, it is recommended you also explicitly depend on RxJava's latest version for bug fixes and new features.
    api "io.reactivex.rxjava2:rxjava:$rx_java"

    // Firebase
    api "com.google.firebase:firebase-core:20.0.2"
    api "com.google.firebase:firebase-messaging:23.0.0"
    api "com.google.firebase:firebase-database:20.0.3"


    // Add the Firebase Crashlytics SDK.
    api 'com.google.firebase:firebase-crashlytics:18.2.7'
    // Recommended: Add the Google Analytics SDK.Â©
    api 'com.google.firebase:firebase-analytics:20.0.2'


    /*ML KIT START*/
    api 'com.google.android.gms:play-services-mlkit-text-recognition:18.0.0'
    api 'com.google.mlkit:image-labeling:17.0.7'
    // Image labeling custom
    api 'com.google.mlkit:image-labeling-custom:17.0.1'

    // ARCore library
    api "com.google.ar:core:$ar_core"
    api "com.google.ar.sceneform.ux:sceneform-ux:$sceneform"
    api 'com.google.ar.sceneform:assets:1.17.1'

    // For Image loading
    api "com.github.bumptech.glide:glide:$glide"
    annotationProcessor "com.github.bumptech.glide:compiler:$glide"

    // For Image zooming
    api "com.ablanco.zoomy:zoomy:$zoomy"

    // To get versionName from Play store
    api "org.jsoup:jsoup:$jsoup"
//    api 'org.jetbrains:annotations-java5:15.0'

    // For Circular Image View
//    api "de.hdodenhof:circleimageview:$circular_imageview"

    // Lottie For Animations
    api "com.airbnb.android:lottie:$lottie"

    // To change font
    api 'io.github.inflationx:calligraphy3:3.1.1'
    api 'io.github.inflationx:viewpump:2.0.3'

    // Mp Android Chart
    api "com.github.PhilJay:MPAndroidChart:$mp_android_chart"

    // Create drawable with text for stores
    api "com.amulyakhare:com.amulyakhare.textdrawable:$text_drawable"

    //For InApp update feature
    api 'com.google.android.play:core-ktx:1.8.1'

    api project(':locationpicker')

    // Mobikul Social Login
    
    api project(':cropper')

    implementation 'com.razorpay:checkout:1.6.20'

    // Zopim
    implementation group: 'com.zendesk', name: 'chat', version: '3.1.0'
    implementation group: 'com.zendesk', name: 'messaging', version: '5.1.0'

}

apply plugin: 'com.google.ar.sceneform.plugin'
if (!is_marketplace_app) {
    apply plugin: 'com.google.gms.google-services'
//    play {
//        serviceAccountCredentials = file("your-key.json")
//    }

}

